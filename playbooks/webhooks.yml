---
# This node is used for two webhook related functions:

# 1. Proxy webhooks from public Github to internal Jenkins.
#    The jenkins master maintains a ssh tunnel to the webhook proxy (whp)
#    node. The whp runs nginx which receives and authenticates requests
#    from Github then forwards them to Jenkins via the ssh tunnel.

# 2. Receive webhooks from MaaS and create JIRA issues.
#    Maas can send webhooks but not in a format that JIRA understands.
#    There is a small flask app called webhooktranslator that receives
#    webhooks from MaaS, extracts relevant info and uses that to create
#    Jira issues.

- name: Ping nodepool nodes to gather facts
  hosts: nodepool_server
  user: root
  tasks:
    - ping:

- name: Configure Webhook Proxy Node
  hosts: webhook_proxy
  user: root
  vars_files:
    - vars/re_infra.yml

  vars:
    GITHUB_CIDR: "192.30.252.0/22"

    RPC_GATING_REPO: "https://github.com/rcbops/rpc-gating"
    RPC_GATING_BRANCH: "{{ lookup('env', 'RPC_GATING_BRANCH') }}"
    RPC_GATING_DIR: /opt/rpc-gating

    WHT_DIR: "{{RPC_GATING_DIR}}/webhooktranslator"
    WHT_VENV_DIR: /opt/venv_webhooktranslator
    WHT_SOCK: /run/webhooktranslator.sock

    RACKSPACE_WEBHOOK_TOKEN: "{{ lookup('env', 'RACKSPACE_WEBHOOK_TOKEN') }}"
    JIRA_USER: "{{ lookup('env', 'JIRA_USER') }}"
    JIRA_PASSWORD: "{{ lookup('env', 'JIRA_PASS') }}"
    JIRA_PROJECT: "{{ lookup('env', 'JIRA_PROJECT') }}"

    # phobostunnel_ssh_pubkey Injected by Jenkins Credential
    # Ports defined in playbooks/vars/re_infra.yml

  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted
        daemon_reload: yes
      listen: Restart all services

    - name: Restart webhook translator
      systemd:
        enabled: yes
        service: webhooktranslator.service
        daemon_reload: yes
        state: restarted
      listen: Restart all services

  pre_tasks:
    # used by webhooks.groovy to create the ssh tunnel script
    - name: Write ip file
      delegate_to: localhost
      copy:
        dest: "{{WORKSPACE}}/instance_address"
        content: "{{ansible_default_ipv4.address}}"

    # Setup webhook translator
    - name: Install prerequisite distro packages
      apt:
        name:
          # requirement for cloning the repos
          # we install from
          - git
          # requirements for pip installs
          - gcc
          - libffi-dev
          - libssl-dev
          - python-pip
          - python-virtualenv
          # requirements for ansible
          # TODO(odyssey4me):
          # Remove aptitude when we shift to using
          # ansible 2.4
          - aptitude
          - python-apt
          - python-minimal
          # used for creating htpasswd file
          - apache2-utils
        update_cache: yes
      notify:
        - Restart all services

    - name: Install virtualenv tool
      pip:
        name: "virtualenv"

    - name: Clone rpc-gating
      git:
        repo: "{{ RPC_GATING_REPO }}"
        version: "{{ RPC_GATING_BRANCH }}"
        dest: "{{ RPC_GATING_DIR }}"

    - name: Install webhook translator
      pip:
        virtualenv: "{{ WHT_VENV_DIR }}"
        name: "{{ WHT_DIR }}"
        state: forcereinstall
      notify: Restart webhook translator

    - name: Template webhooktranslator service definition
      template:
        src: webhooktranslator_service.j2
        dest: /lib/systemd/system/webhooktranslator.service
      notify: Restart webhook translator

    - name: Template webhooktranslator socket definition
      template:
        src: webhooktranslator_socket.j2
        dest: /lib/systemd/system/webhooktranslator.socket
      notify: Restart webhook translator

    # Nginx forwards FCGI requests to a unix socket (WHT_SOCK)
    # Systemd creates this socket and starts webhooktranslator.service
    # when that socket receives a connection
    - name: Load and Enable webhooktranslator systemd service
      systemd:
        enabled: yes
        service: webhooktranslator.service
        daemon_reload: yes
        state: restarted

    - name: Load and Enable webhooktranslator systemd socket activator
      systemd:
        enabled: yes
        state: started
        service: webhooktranslator.socket
        daemon_reload: yes

    - name: Allow Webhook Translator
      ufw:
        rule: allow
        port: "{{ WHT_PORT }}"

    # The nginx instance for basic auth listens on 80
    # the ssh tunnels listens on 8888 but is not open to the public.
    - name: Allow Github webhooks
      ufw:
        rule: allow
        port: "{{ GITHUB_HOOK_PORT }}"
        src: "{{GITHUB_CIDR }}"

    # Configure Nginx.

    - name: Create htpasswd file
      shell: |
        cd ~jenkins
        htpasswd -cb .htpasswd {{ webhookproxy_user }} {{ webhookproxy_pass }}

    # The webhook proxy node will be used as a proxy for connections
    # to phobos (RE-643)
    # The deploy-phobos container will have a service that connects
    # via ssh to the webhook proxy node using ssh remote forwarding
    # to expose the local port
    - name: Create phobos user
      user:
        name: phobos

    - name: Add phobos user Authorised key
      authorized_key:
        user: phobos
        key: "{{lookup('file', phobostunnel_ssh_pubkey)}}"

    - name: Allow access to phobos deploy host
      ufw:
        rule: allow
        port: "{{ PHOBOS_SSH_PORT }}"

    # The webhook proxy node also provides access to Jenkins for the nodepool
    # servers. Nodepool requires access to ZMQ and the Jenkins API
    - name: Allow nodepool servers access to ZMQ and Jenkins API
      ufw:
        rule: allow
        port: "{{ item[1] }}"
        from: "{{ hostvars[item[0]].ansible_default_ipv4.address }}"
      with_nested:
        - "{{ groups['nodepool_server'] }}"
        - - "{{ JENKINS_ZMQ_PORT }}"
          - "{{ NODEPOOL_JENKINS_API_PORT }}"

  roles:
    - role: geerlingguy.nginx
      nginx_remove_default_vhost: true
      nginx_vhosts:
        - listen: "{{ GITHUB_HOOK_PORT }}"
          server_name: "webhookproxy"
          root: "/dev/null"
          extra_parameters: |
            location ~ /(ghprb|github-webhook) {
              auth_basic "RPC Github Webhooks";
              auth_basic_user_file /var/lib/jenkins/.htpasswd;
              proxy_bind 127.0.0.1;
              proxy_pass https://localhost:8888;
              # Don't pass auth header on to jenkins.
              proxy_set_header Authorization "";
            }
          # This port is protected by UFW, connections only allowed
          # From nodepool servers.
        - listen: "{{ NODEPOOL_JENKINS_API_PORT }}"
          server_name: "nodepooljenkinsproxy"
          root: "/dev/null"
          extra_parameters: |
            location /np {
              proxy_bind 127.0.0.1;
              proxy_pass https://localhost:8888;
            }
        - listen: "{{ WHT_PORT }}"
          server_name: "webhooktranslator"
          root: "/dev/null"
          extra_parameters: |
            location = /wht { rewrite ^ /wht/ last; }
            location /wht { try_files $uri @wht; }
            location @wht {
                include fastcgi_params;
                fastcgi_split_path_info ^(/wht)(.*)$;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param SCRIPT_NAME $fastcgi_script_name;
                fastcgi_pass unix:{{ WHT_SOCK }};
            }
